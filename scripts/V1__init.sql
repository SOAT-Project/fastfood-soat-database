-- Create tables

create table "clients" (
    "id" int generated by default as identity primary key not null,
    "public_id" char(36) not null,
    "name" varchar(100),
    "email" varchar(100),
    "cpf" char(11),
    "created_at" timestamp default current_timestamp,
    "updated_at" timestamp default current_timestamp,
    "deleted_at" timestamp
);

create table "orders" (
    "id" int generated by default as identity primary key not null,
    "public_id" char(36) NOT NULL,
    "value" decimal(10, 2) NOT NULL,
    "order_number" int NOT NULL,
    "status" varchar(20) NOT NULL,
    "client_id" int,
    "created_at" timestamp default current_timestamp,
    "updated_at" timestamp default current_timestamp,
    "deleted_at" timestamp
);

create table "order_products" (
    "id" int generated by default as identity primary key not null,
    "value" decimal(10, 2) not null,
    "order_id" int not null,
    "product_id" int not null,
    "quantity" int not null,
    "created_at" timestamp default current_timestamp,
    "updated_at" timestamp default current_timestamp,
    "deleted_at" timestamp
);

create table "products" (
    "id" int generated by default as identity primary key not null,
    "value" decimal(10, 2),
    "name" varchar(100) not null,
    "description" varchar(500),
    "image_url" varchar(500),
    "product_category_id" int not null,
    "created_at" timestamp default current_timestamp,
    "updated_at" timestamp default current_timestamp,
    "deleted_at" timestamp
);

create table "product_categories" (
    "id" int generated by default as identity primary key not null,
    "name" varchar(100) not null,
    "created_at" timestamp default current_timestamp,
    "updated_at" timestamp default current_timestamp,
    "deleted_at" timestamp
);

create table "payments" (
    "id" int generated by default as identity primary key not null,
    "value" decimal(10, 2) not null,
    "external_reference" varchar not null,
    "qr_code" text,
    "order_id" int not null,
    "status" varchar(20) not null,
    "created_at" timestamp default current_timestamp,
    "updated_at" timestamp default current_timestamp,
    "deleted_at" timestamp
);

create table "staff" (
    "id" int generated by default as identity primary key not null,
    "name" varchar(100) not null,
    "email" varchar(100) not null,
    "cpf" varchar(11) not null,
    "is_active" boolean not null,
    "created_at" timestamp default current_timestamp,
    "updated_at" timestamp default current_timestamp,
    "deleted_at" timestamp
);

create table "staff_roles" (
    "id" int generated by default as identity primary key not null,
    "staff_id" int not null,
    "role_id" int not null,
    "created_at" timestamp default current_timestamp,
    "updated_at" timestamp default current_timestamp,
    "deleted_at" timestamp
);

create table "roles" (
    "id" int generated by default as identity primary key not null,
    "role_name" varchar(20) not null,
    "created_at" timestamp default current_timestamp,
    "updated_at" timestamp default current_timestamp,
    "deleted_at" timestamp
);


-- Create foreign keys

alter table "orders"
    add foreign key ("client_id") references "clients" ("id");

alter table "order_products"
    add foreign key ("order_id") references "orders" ("id");

alter table "order_products"
    add foreign key ("product_id") references "products" ("id");

alter table "products"
    add foreign key ("product_category_id") references "product_categories" ("id");

alter table "payments"
    add foreign key ("order_id") references "orders" ("id");

alter table "staff_roles"
    add foreign key ("staff_id") references "staff" ("id");

alter table "staff_roles"
    add foreign key ("role_id") references "roles" ("id");


-- Create indices

create index idx_clients_cpf on clients using hash(cpf);
create index idx_orders_public_id on orders using hash(public_id);
create index idx_payments_external_ref on payments using hash(external_reference);
create index idx_payments_status on payments using hash(status);

create index idx_orders_created_at on orders(created_at);
create index idx_orders_status_created on orders(status, created_at);

create index idx_orders_created_brin on orders using brin(created_at);


-- Create triggers and functions

create or replace function update_timestamp()
   returns trigger as $$
begin
   new.updated_at = current_timestamp;
return new;
end;
$$ language plpgsql;


do $$
declare
tbl_name text;
begin
for tbl_name in
select table_name from information_schema.columns where column_name = 'updated_at'
    loop
      execute format(
         'create trigger set_updated_at_%I
          before update on %I
          for each row
          execute function update_timestamp();',
         tbl_name,
         tbl_name
      );
end loop;
end;
$$;
